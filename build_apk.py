# -*- coding: utf-8 -*-
"""build_apk

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T2Uf1mAda7OTqfd5FI1faGN1m3WCgWOw
"""

!apt update
!apt install -y python3-pip python3-setuptools python3-venv openjdk-17-jdk unzip
!pip install --upgrade cython buildozer
!apt install -y zip

!buildozer init

!nano buildozer.spec

!cat buildozer.spec

!apt update
!apt install -y python3-pip python3-setuptools python3-venv openjdk-17-jdk unzip
!pip install --upgrade cython buildozer
!apt install -y zip

!buildozer init

!cat buildozer.spec  # View the current settings

import subprocess

# Modify buildozer.spec
def update_buildozer_spec():
    with open("buildozer.spec", "r") as file:
        content = file.read()

    content = content.replace("title = My Application", "title = Live Trend Catcher")
    content = content.replace("package.name = myapp", "package.name = live_trend_catcher")
    content = content.replace("package.domain = org.test", "package.domain = org.yourname")
    content = content.replace("requirements = python3,kivy", "requirements = python3, kivy, requests")
    content = content.replace("fullscreen = 0", "fullscreen = 1")
    content = content.replace("android.api = 31", "android.api = 33")
    content = content.replace("android.release_artifact = aab", "android.release_artifact = apk")
    content = content.replace("android.debug_artifact = apk", "android.debug_artifact = apk")

    with open("buildozer.spec", "w") as file:
        file.write(content)

    print("âœ… buildozer.spec updated successfully!")

# Run Buildozer commands
def run_buildozer():
    print("ðŸš€ Running Buildozer to build APK...")

    # Initialize Buildozer (if needed)
    subprocess.run(["buildozer", "init"], check=False)

    # Run the APK build command
    subprocess.run(["buildozer", "-v", "android", "debug"], check=True)

    print("ðŸŽ‰ Build complete! Check the 'bin/' folder for the APK.")

# Execute the functions
update_buildozer_spec()
run_buildozer()